{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\Music\\\\HireHub\\\\client\\\\src\\\\pages\\\\LeisurePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = Array(9).fill(null);\nconst LeisurePage = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const checkWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return squares.every(square => square) ? \"Draw\" : null; // Check for draw\n  };\n  const handleUserMove = index => {\n    if (board[index] || isGameOver) return;\n    const newBoard = [...board];\n    newBoard[index] = \"X\";\n    setBoard(newBoard);\n    const result = checkWinner(newBoard);\n    if (result) {\n      setWinner(result);\n      setIsGameOver(true);\n      return;\n    }\n    computerMove(newBoard);\n  };\n  const computerMove = newBoard => {\n    const availableMoves = newBoard.map((val, index) => val === null ? index : null).filter(val => val !== null);\n    if (availableMoves.length > 0) {\n      const randomIndex = Math.floor(Math.random() * availableMoves.length);\n      newBoard[availableMoves[randomIndex]] = \"O\";\n      setBoard(newBoard);\n      const result = checkWinner(newBoard);\n      if (result) {\n        setWinner(result);\n        setIsGameOver(true);\n      }\n    }\n  };\n  const resetGame = () => {\n    setBoard(initialBoard);\n    setIsGameOver(false);\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 8,\n        lg: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Tic Tac Toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), winner && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: winner === \"Draw\" ? \"warning\" : \"success\",\n          children: winner === \"Draw\" ? \"It's a Draw!\" : `Winner: ${winner}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            marginBottom: \"20px\"\n          },\n          children: Array.from({\n            length: 3\n          }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginBottom: \"5px\"\n            },\n            children: board.slice(rowIndex * 3, rowIndex * 3 + 3).map((square, index) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              style: {\n                width: \"100px\",\n                // Increased button size\n                height: \"100px\",\n                // Increased button size\n                fontSize: \"36px\",\n                // Increased font size\n                margin: \"5px\",\n                backgroundColor: \"#f0f0f0\",\n                transition: \"background-color 0.3s\" // Added transition for hover effect\n              },\n              onClick: () => handleUserMove(rowIndex * 3 + index),\n              onMouseEnter: e => e.target.style.backgroundColor = \"#d0e7ff\" // Hover effect\n              ,\n              onMouseLeave: e => e.target.style.backgroundColor = \"#f0f0f0\" // Reset hover effect\n              ,\n              children: square\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"w-100\",\n          style: {\n            fontSize: \"24px\"\n          },\n          onClick: resetGame,\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LeisurePage, \"DhiLyafrSZnp0Fpg2LKSbO5JulI=\");\n_c = LeisurePage;\nexport default LeisurePage;\nvar _c;\n$RefreshReg$(_c, \"LeisurePage\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","Alert","jsxDEV","_jsxDEV","initialBoard","Array","fill","LeisurePage","_s","board","setBoard","isGameOver","setIsGameOver","winner","setWinner","checkWinner","squares","lines","line","a","b","c","every","square","handleUserMove","index","newBoard","result","computerMove","availableMoves","map","val","filter","length","randomIndex","Math","floor","random","resetGame","className","children","xs","md","lg","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","display","flexDirection","alignItems","marginBottom","from","_","rowIndex","justifyContent","slice","width","height","fontSize","margin","backgroundColor","transition","onClick","onMouseEnter","e","target","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/aksha/Music/HireHub/client/src/pages/LeisurePage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Alert } from \"react-bootstrap\";\r\n\r\nconst initialBoard = Array(9).fill(null);\r\n\r\nconst LeisurePage = () => {\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  const checkWinner = (squares) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (let line of lines) {\r\n      const [a, b, c] = line;\r\n      if (\r\n        squares[a] &&\r\n        squares[a] === squares[b] &&\r\n        squares[a] === squares[c]\r\n      ) {\r\n        return squares[a];\r\n      }\r\n    }\r\n\r\n    return squares.every((square) => square) ? \"Draw\" : null; // Check for draw\r\n  };\r\n\r\n  const handleUserMove = (index) => {\r\n    if (board[index] || isGameOver) return;\r\n\r\n    const newBoard = [...board];\r\n    newBoard[index] = \"X\";\r\n    setBoard(newBoard);\r\n    const result = checkWinner(newBoard);\r\n\r\n    if (result) {\r\n      setWinner(result);\r\n      setIsGameOver(true);\r\n      return;\r\n    }\r\n\r\n    computerMove(newBoard);\r\n  };\r\n\r\n  const computerMove = (newBoard) => {\r\n    const availableMoves = newBoard\r\n      .map((val, index) => (val === null ? index : null))\r\n      .filter((val) => val !== null);\r\n    if (availableMoves.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * availableMoves.length);\r\n      newBoard[availableMoves[randomIndex]] = \"O\";\r\n      setBoard(newBoard);\r\n      const result = checkWinner(newBoard);\r\n\r\n      if (result) {\r\n        setWinner(result);\r\n        setIsGameOver(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(initialBoard);\r\n    setIsGameOver(false);\r\n    setWinner(null);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={12} md={8} lg={6}>\r\n          <h2 className=\"text-center mb-4\">Tic Tac Toe</h2>\r\n          {winner && (\r\n            <Alert variant={winner === \"Draw\" ? \"warning\" : \"success\"}>\r\n              {winner === \"Draw\" ? \"It's a Draw!\" : `Winner: ${winner}`}\r\n            </Alert>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            {Array.from({ length: 3 }, (_, rowIndex) => (\r\n              <div\r\n                key={rowIndex}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  marginBottom: \"5px\",\r\n                }}\r\n              >\r\n                {board\r\n                  .slice(rowIndex * 3, rowIndex * 3 + 3)\r\n                  .map((square, index) => (\r\n                    <Button\r\n                      key={index}\r\n                      variant=\"outline-primary\"\r\n                      style={{\r\n                        width: \"100px\", // Increased button size\r\n                        height: \"100px\", // Increased button size\r\n                        fontSize: \"36px\", // Increased font size\r\n                        margin: \"5px\",\r\n                        backgroundColor: \"#f0f0f0\",\r\n                        transition: \"background-color 0.3s\", // Added transition for hover effect\r\n                      }}\r\n                      onClick={() => handleUserMove(rowIndex * 3 + index)}\r\n                      onMouseEnter={(e) =>\r\n                        (e.target.style.backgroundColor = \"#d0e7ff\")\r\n                      } // Hover effect\r\n                      onMouseLeave={(e) =>\r\n                        (e.target.style.backgroundColor = \"#f0f0f0\")\r\n                      } // Reset hover effect\r\n                    >\r\n                      {square}\r\n                    </Button>\r\n                  ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"w-100\"\r\n            style={{ fontSize: \"24px\" }}\r\n            onClick={resetGame}\r\n          >\r\n            Restart Game\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LeisurePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}