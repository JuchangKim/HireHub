{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\comp602\\\\HireHub\\\\client\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button, Alert, Card, Row, Col } from \"react-bootstrap\";\nimport JobPreferences from \"./JobPreferences\"; // Import the JobPreferences card\n\n// JC - The user has jobpreferences data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    resume: \"\",\n    // JC - the job preferences is declared here.\n    jobPreferences: {\n      salary: \"\",\n      location: \"\",\n      industry: \"\",\n      jobTitle: \"\"\n    } // Updating job preference\n  });\n  const [resumeFileName, setResumeFileName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [resumeError, setResumeError] = useState(\"\");\n  const [resumeSuccessMessage, setResumeSuccessMessage] = useState(\"\");\n  const [formErrors, setFormErrors] = useState({});\n\n  // JC - the job preferences data also will be represented.\n  useEffect(() => {\n    const fetchProfile = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setError(\"User is not authenticated. Please log in.\");\n        return;\n      }\n      try {\n        var _response$data$jobPre, _response$data$jobPre2, _response$data$jobPre3, _response$data$jobPre4;\n        const response = await axios.get(\"http://localhost:5000/api/profile\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFormData({\n          firstName: response.data.firstName,\n          lastName: response.data.lastName,\n          email: response.data.email,\n          phoneNumber: response.data.phoneNumber,\n          resume: response.data.resume || \"\",\n          // JC - the job Preferences data are added.\n          jobPreferences: {\n            jobTitle: ((_response$data$jobPre = response.data.jobPreferences) === null || _response$data$jobPre === void 0 ? void 0 : _response$data$jobPre.jobTitle) || \"\",\n            location: ((_response$data$jobPre2 = response.data.jobPreferences) === null || _response$data$jobPre2 === void 0 ? void 0 : _response$data$jobPre2.location) || \"\",\n            salary: ((_response$data$jobPre3 = response.data.jobPreferences) === null || _response$data$jobPre3 === void 0 ? void 0 : _response$data$jobPre3.salary) || \"\",\n            industry: ((_response$data$jobPre4 = response.data.jobPreferences) === null || _response$data$jobPre4 === void 0 ? void 0 : _response$data$jobPre4.industry) || \"\"\n          }\n        });\n        setResumeFileName(response.data.resumeFileName || \"\");\n      } catch (err) {\n        setError(\"Error fetching profile. Please try again.\");\n        console.error(\"Error fetching profile:\", err);\n      }\n    };\n    fetchProfile();\n  }, []);\n  const validateForm = () => {\n    const errors = {};\n    const nameRegex = /^[a-zA-Z\\s]+$/;\n    const phoneRegex = /^[0-9]+$/;\n    if (!formData.firstName || !nameRegex.test(formData.firstName)) {\n      errors.firstName = \"First Name must contain only alphabets and spaces.\";\n    }\n    if (!formData.lastName || !nameRegex.test(formData.lastName)) {\n      errors.lastName = \"Last Name must contain only alphabets and spaces.\";\n    }\n    if (!formData.phoneNumber || !phoneRegex.test(formData.phoneNumber)) {\n      errors.phoneNumber = \"Phone Number must contain only digits.\";\n    }\n    if (!formData.email) {\n      errors.email = \"Email is required.\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // JC - the jobPreferences data is also added and show the previous jobPreferences data first.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (['salary', 'location', 'industry', 'jobTitle'].includes(name)) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        jobPreferences: {\n          ...prevFormData.jobPreferences,\n          [name]: value\n        }\n      }));\n    } else {\n      // For other fields outside jobPreferences\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [name]: value\n      }));\n    }\n  };\n\n  // JC - when submit, the jobPreferences data is submitted together.\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    try {\n      await axios.put(\"http://localhost:5000/api/profile\", {\n        ...formData,\n        // JC - Adding jobPreferences data when submit.\n        jobPreferences: {\n          jobTitle: formData.jobPreferences.jobTitle || \"\",\n          location: formData.jobPreferences.location || \"\",\n          industry: formData.jobPreferences.industry || \"\",\n          salary: formData.jobPreferences.salary || \"\"\n        }\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Profile updated successfully!\");\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2000);\n    } catch (err) {\n      console.error(\"Error updating profile:\", err.response.data);\n      setMessage(\"Failed to update profile. Please try again.\");\n    }\n  };\n  const handleResumeUpload = async e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      if (file.size > 5 * 1024 * 1024) {\n        setResumeError(\"File size exceeds 5MB.\");\n        return;\n      }\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onloadend = async () => {\n        const resumeData = fileReader.result;\n        setFormData({\n          ...formData,\n          resume: resumeData\n        });\n        setResumeFileName(file.name);\n        setResumeError(\"\");\n        setResumeSuccessMessage(\"Resume uploaded successfully!\");\n        setTimeout(() => {\n          setResumeSuccessMessage(\"\");\n        }, 2000);\n        const token = localStorage.getItem(\"token\");\n        try {\n          await axios.put(\"http://localhost:5000/api/profile\", {\n            resume: resumeData,\n            resumeFileName: file.name\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        } catch (e) {\n          setResumeError(\"Failed to save resume: Please try again.\");\n        }\n      };\n    } else {\n      setResumeError(\"Only PDF files are allowed.\");\n    }\n  };\n  const handleViewResume = () => {\n    if (formData.resume) {\n      const newWindow = window.open();\n      newWindow.document.write(`<iframe width=\"100%\" height=\"100%\" src=\"${formData.resume}\"></iframe>`);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center align-items-center min-vh-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"login-card p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: formData.firstName,\n              onChange: handleChange,\n              placeholder: \"Enter first name\",\n              className: \"mb-3\",\n              isInvalid: !!formErrors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: formErrors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: formData.lastName,\n              onChange: handleChange,\n              placeholder: \"Enter last name\",\n              className: \"mb-3\",\n              isInvalid: !!formErrors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: formErrors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              placeholder: \"Enter email\",\n              className: \"mb-3\",\n              isInvalid: !!formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPhoneNumber\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phoneNumber\",\n              value: formData.phoneNumber,\n              onChange: handleChange,\n              placeholder: \"Enter phone number\",\n              className: \"mb-3\",\n              isInvalid: !!formErrors.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: formErrors.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(JobPreferences, {\n            formData: formData,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formResume\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload Resume (10MB PDF Only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              accept: \".pdf\",\n              onChange: handleResumeUpload,\n              className: \"mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), resumeError && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: resumeError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 31\n            }, this), resumeSuccessMessage && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: resumeSuccessMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), resumeFileName && /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: `Uploaded: ${resumeFileName}`,\n              readOnly: true,\n              className: \"mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                className: \"w-100\",\n                children: \"Update Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), formData.resume && /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"w-100\",\n                onClick: handleViewResume,\n                children: \"View Resume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"h9Kk8LSLb1Y8xDCrBQd1XFED/yM=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Form","Button","Alert","Card","Row","Col","JobPreferences","jsxDEV","_jsxDEV","Profile","_s","error","setError","formData","setFormData","firstName","lastName","email","phoneNumber","resume","jobPreferences","salary","location","industry","jobTitle","resumeFileName","setResumeFileName","message","setMessage","resumeError","setResumeError","resumeSuccessMessage","setResumeSuccessMessage","formErrors","setFormErrors","fetchProfile","token","localStorage","getItem","_response$data$jobPre","_response$data$jobPre2","_response$data$jobPre3","_response$data$jobPre4","response","get","headers","Authorization","data","err","console","validateForm","errors","nameRegex","phoneRegex","test","Object","keys","length","handleChange","e","name","value","target","includes","prevFormData","handleSubmit","preventDefault","put","setTimeout","handleResumeUpload","file","files","type","size","fileReader","FileReader","readAsDataURL","onloadend","resumeData","result","handleViewResume","newWindow","window","open","document","write","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Body","variant","onSubmit","Group","controlId","Label","Control","onChange","placeholder","isInvalid","Feedback","accept","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/comp602/HireHub/client/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Form, Button, Alert, Card, Row, Col } from \"react-bootstrap\";\r\nimport JobPreferences from \"./JobPreferences\"; // Import the JobPreferences card\r\n\r\n// JC - The user has jobpreferences data\r\nconst Profile = () => {\r\n  const [error, setError] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    resume: \"\",\r\n    // JC - the job preferences is declared here.\r\n    jobPreferences: {\r\n      salary: \"\",\r\n      location: \"\",\r\n      industry: \"\",\r\n      jobTitle: \"\"\r\n    } // Updating job preference\r\n  });\r\n  const [resumeFileName, setResumeFileName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [resumeError, setResumeError] = useState(\"\");\r\n  const [resumeSuccessMessage, setResumeSuccessMessage] = useState(\"\");\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  // JC - the job preferences data also will be represented.\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (!token) {\r\n        setError(\"User is not authenticated. Please log in.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/profile\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setFormData({\r\n          firstName: response.data.firstName,\r\n          lastName: response.data.lastName,\r\n          email: response.data.email,\r\n          phoneNumber: response.data.phoneNumber,\r\n          resume: response.data.resume || \"\",\r\n          // JC - the job Preferences data are added.\r\n          jobPreferences: {\r\n            jobTitle: response.data.jobPreferences?.jobTitle || \"\",\r\n            location: response.data.jobPreferences?.location || \"\",\r\n            salary: response.data.jobPreferences?.salary || \"\",\r\n            industry: response.data.jobPreferences?.industry || \"\",\r\n          },\r\n\r\n        });\r\n        setResumeFileName(response.data.resumeFileName || \"\");\r\n      } catch (err) {\r\n        setError(\"Error fetching profile. Please try again.\");\r\n        console.error(\"Error fetching profile:\", err);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    const nameRegex = /^[a-zA-Z\\s]+$/;\r\n    const phoneRegex = /^[0-9]+$/;\r\n\r\n    if (!formData.firstName || !nameRegex.test(formData.firstName)) {\r\n      errors.firstName = \"First Name must contain only alphabets and spaces.\";\r\n    }\r\n    if (!formData.lastName || !nameRegex.test(formData.lastName)) {\r\n      errors.lastName = \"Last Name must contain only alphabets and spaces.\";\r\n    }\r\n    if (!formData.phoneNumber || !phoneRegex.test(formData.phoneNumber)) {\r\n      errors.phoneNumber = \"Phone Number must contain only digits.\";\r\n    }\r\n    if (!formData.email) {\r\n      errors.email = \"Email is required.\";\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  // JC - the jobPreferences data is also added and show the previous jobPreferences data first.\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    if (['salary', 'location', 'industry', 'jobTitle'].includes(name)) {\r\n      setFormData((prevFormData) => ({\r\n        ...prevFormData,\r\n        jobPreferences: {\r\n          ...prevFormData.jobPreferences,\r\n          [name]: value\r\n        }\r\n      }));\r\n    } else {\r\n      // For other fields outside jobPreferences\r\n      setFormData((prevFormData) => ({\r\n        ...prevFormData,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  // JC - when submit, the jobPreferences data is submitted together.\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n      await axios.put(\r\n        \"http://localhost:5000/api/profile\",\r\n        {\r\n          ...formData,\r\n          // JC - Adding jobPreferences data when submit.\r\n        jobPreferences: { \r\n          jobTitle: formData.jobPreferences.jobTitle || \"\", \r\n          location: formData.jobPreferences.location || \"\", \r\n          industry: formData.jobPreferences.industry || \"\", \r\n          salary: formData.jobPreferences.salary || \"\"\r\n        }\r\n      },\r\n      {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      setMessage(\"Profile updated successfully!\");\r\n      setTimeout(() => {\r\n        setMessage(\"\");\r\n      }, 2000);\r\n    } catch (err) {\r\n      console.error(\"Error updating profile:\", err.response.data);\r\n      setMessage(\"Failed to update profile. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleResumeUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        setResumeError(\"File size exceeds 5MB.\");\r\n        return;\r\n      }\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onloadend = async () => {\r\n        const resumeData = fileReader.result;\r\n        setFormData({ ...formData, resume: resumeData });\r\n        setResumeFileName(file.name);\r\n        setResumeError(\"\");\r\n        setResumeSuccessMessage(\"Resume uploaded successfully!\");\r\n\r\n        setTimeout(() => {\r\n          setResumeSuccessMessage(\"\");\r\n        }, 2000);\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        try {\r\n          await axios.put(\r\n            \"http://localhost:5000/api/profile\",\r\n            { resume: resumeData, resumeFileName: file.name },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n          );\r\n        } catch (e) {\r\n          setResumeError(\"Failed to save resume: Please try again.\");\r\n        }\r\n      };\r\n    } else {\r\n      setResumeError(\"Only PDF files are allowed.\");\r\n    }\r\n  };\r\n\r\n  const handleViewResume = () => {\r\n    if (formData.resume) {\r\n      const newWindow = window.open();\r\n      newWindow.document.write(\r\n        `<iframe width=\"100%\" height=\"100%\" src=\"${formData.resume}\"></iframe>`\r\n      );\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center align-items-center min-vh-100 p-4\">\r\n      <Card className=\"login-card p-4\">\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          {message && <Alert variant=\"info\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            \r\n            <Form.Group controlId=\"formFirstName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={formData.firstName}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter first name\"\r\n                className=\"mb-3\"\r\n                isInvalid={!!formErrors.firstName}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formErrors.firstName}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formLastName\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={formData.lastName}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter last name\"\r\n                className=\"mb-3\"\r\n                isInvalid={!!formErrors.lastName}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formErrors.lastName}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter email\"\r\n                className=\"mb-3\"\r\n                isInvalid={!!formErrors.email}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formErrors.email}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPhoneNumber\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={formData.phoneNumber}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter phone number\"\r\n                className=\"mb-3\"\r\n                isInvalid={!!formErrors.phoneNumber}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formErrors.phoneNumber}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            {/* JobPreferences card is added between phone number and resume */}\r\n            <JobPreferences formData={formData} handleChange={handleChange} />\r\n            \r\n            <Form.Group controlId=\"formResume\">\r\n              <Form.Label>Upload Resume (10MB PDF Only)</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\".pdf\"\r\n                onChange={handleResumeUpload}\r\n                className=\"mb-3\"\r\n              />\r\n              {resumeError && <Alert variant=\"danger\">{resumeError}</Alert>}\r\n              {resumeSuccessMessage && (\r\n                <Alert variant=\"success\">{resumeSuccessMessage}</Alert>\r\n              )}\r\n              {resumeFileName && (\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={`Uploaded: ${resumeFileName}`}\r\n                  readOnly\r\n                  className=\"mb-3\"\r\n                />\r\n              )}\r\n            </Form.Group>\r\n            <Row className=\"mb-3\">\r\n              <Col>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                  Update Profile\r\n                </Button>\r\n              </Col>\r\n              {formData.resume && (\r\n                <Col>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"w-100\"\r\n                    onClick={handleViewResume}\r\n                  >\r\n                    View Resume\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}