{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B4NKRUPT\\\\Desktop\\\\Studies\\\\sdp\\\\HireHub\\\\HireHub\\\\client\\\\src\\\\pages\\\\SalaryEstimator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SalaryEstimator() {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [industries, setIndustries] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [experience, setExperience] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedIndustry, setSelectedIndustry] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const [salaryEstimate, setSalaryEstimate] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fetch roles, industries, and locations\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const rolesResponse = await axios.get('http://localhost:5000/api/salary/roles');\n        const industriesResponse = await axios.get('http://localhost:5000/api/salary/industries');\n        const locationsResponse = await axios.get('http://localhost:5000/api/salary/locations');\n        setRoles(rolesResponse.data);\n        setIndustries(industriesResponse.data);\n        setLocations(locationsResponse.data);\n      } catch (error) {\n        console.error('Error fetching options:', error);\n      }\n    };\n    fetchOptions();\n  }, []);\n  const handleEstimateSalary = async () => {\n    setErrorMessage(''); // Clear previous error messages\n    try {\n      const response = await axios.get('http://localhost:5000/api/salary/estimate', {\n        params: {\n          role: selectedRole,\n          industry: selectedIndustry,\n          location: selectedLocation,\n          experience: experience\n        }\n      });\n      setSalaryEstimate(response.data);\n    } catch (error) {\n      // Handle different types of errors\n      if (error.response) {\n        // Server responded with a status other than 200\n        setErrorMessage(error.response.data.message || 'An unexpected error occurred. Please try again.');\n      } else {\n        // Network error or request setup error\n        setErrorMessage('Unable to connect to the server. Please check your network connection.');\n      }\n      setSalaryEstimate(null); // Clear previous salary estimates\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formRole\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedRole,\n              onChange: e => setSelectedRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, role, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formIndustry\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Industry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedIndustry,\n              onChange: e => setSelectedIndustry(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select industry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), industries.map(industry => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: industry,\n                children: industry\n              }, industry, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formLocation\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedLocation,\n              onChange: e => setSelectedLocation(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: location,\n                children: location\n              }, location, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formExperience\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Experience (years)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: experience,\n              onChange: e => setExperience(e.target.value),\n              min: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleEstimateSalary,\n              children: \"Estimate Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), salaryEstimate && /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Salary Estimate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Minimum Salary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), \" $\", salaryEstimate.minSalary, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 97\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Maximum Salary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), \" $\", salaryEstimate.maxSalary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(SalaryEstimator, \"edd52G8m/tO6R/7cIGcZ5yjbBgs=\");\n_c = SalaryEstimator;\nexport default SalaryEstimator;\nvar _c;\n$RefreshReg$(_c, \"SalaryEstimator\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","Alert","axios","jsxDEV","_jsxDEV","SalaryEstimator","_s","roles","setRoles","industries","setIndustries","locations","setLocations","experience","setExperience","selectedRole","setSelectedRole","selectedIndustry","setSelectedIndustry","selectedLocation","setSelectedLocation","salaryEstimate","setSalaryEstimate","errorMessage","setErrorMessage","fetchOptions","rolesResponse","get","industriesResponse","locationsResponse","data","error","console","handleEstimateSalary","response","params","role","industry","location","message","fluid","className","children","xs","md","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","e","target","map","type","min","variant","onClick","Body","Title","Text","minSalary","maxSalary","_c","$RefreshReg$"],"sources":["C:/Users/B4NKRUPT/Desktop/Studies/sdp/HireHub/HireHub/client/src/pages/SalaryEstimator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction SalaryEstimator() {\r\n    const [roles, setRoles] = useState([]);\r\n    const [industries, setIndustries] = useState([]);\r\n    const [locations, setLocations] = useState([]);\r\n    const [experience, setExperience] = useState('');\r\n    const [selectedRole, setSelectedRole] = useState('');\r\n    const [selectedIndustry, setSelectedIndustry] = useState('');\r\n    const [selectedLocation, setSelectedLocation] = useState('');\r\n    const [salaryEstimate, setSalaryEstimate] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // Fetch roles, industries, and locations\r\n    useEffect(() => {\r\n        const fetchOptions = async () => {\r\n            try {\r\n                const rolesResponse = await axios.get('http://localhost:5000/api/salary/roles');\r\n                const industriesResponse = await axios.get('http://localhost:5000/api/salary/industries');\r\n                const locationsResponse = await axios.get('http://localhost:5000/api/salary/locations');\r\n                setRoles(rolesResponse.data);\r\n                setIndustries(industriesResponse.data);\r\n                setLocations(locationsResponse.data);\r\n            } catch (error) {\r\n                console.error('Error fetching options:', error);\r\n            }\r\n        };\r\n\r\n        fetchOptions();\r\n    }, []);\r\n\r\n    const handleEstimateSalary = async () => {\r\n        setErrorMessage(''); // Clear previous error messages\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/salary/estimate', {\r\n                params: {\r\n                    role: selectedRole,\r\n                    industry: selectedIndustry,\r\n                    location: selectedLocation,\r\n                    experience: experience,\r\n                },\r\n            });\r\n            setSalaryEstimate(response.data);\r\n        } catch (error) {\r\n            // Handle different types of errors\r\n            if (error.response) {\r\n                // Server responded with a status other than 200\r\n                setErrorMessage(error.response.data.message || 'An unexpected error occurred. Please try again.');\r\n            } else {\r\n                // Network error or request setup error\r\n                setErrorMessage('Unable to connect to the server. Please check your network connection.');\r\n            }\r\n            setSalaryEstimate(null); // Clear previous salary estimates\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"p-4\">\r\n            <Row>\r\n                <Col xs={12} md={6} className=\"mb-4\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"formRole\" className=\"mb-3\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={selectedRole}\r\n                                onChange={(e) => setSelectedRole(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select role</option>\r\n                                {roles.map((role) => (\r\n                                    <option key={role} value={role}>{role}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formIndustry\" className=\"mb-3\">\r\n                            <Form.Label>Industry</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={selectedIndustry}\r\n                                onChange={(e) => setSelectedIndustry(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select industry</option>\r\n                                {industries.map((industry) => (\r\n                                    <option key={industry} value={industry}>{industry}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formLocation\" className=\"mb-3\">\r\n                            <Form.Label>Location</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={selectedLocation}\r\n                                onChange={(e) => setSelectedLocation(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select location</option>\r\n                                {locations.map((location) => (\r\n                                    <option key={location} value={location}>{location}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formExperience\" className=\"mb-3\">\r\n                            <Form.Label>Experience (years)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                value={experience}\r\n                                onChange={(e) => setExperience(e.target.value)}\r\n                                min=\"0\"\r\n                            />\r\n                        </Form.Group>\r\n                        <div className=\"text-center\">\r\n                            <Button variant=\"primary\" onClick={handleEstimateSalary}>\r\n                                Estimate Salary\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    {errorMessage && (\r\n                        <Alert variant=\"danger\">\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    )}\r\n                    {salaryEstimate && (\r\n                        <Card className=\"mt-4\">\r\n                            <Card.Body>\r\n                                <Card.Title>Salary Estimate</Card.Title>\r\n                                <Card.Text>\r\n                                    <strong>Minimum Salary:</strong> ${salaryEstimate.minSalary}<br />\r\n                                    <strong>Maximum Salary:</strong> ${salaryEstimate.maxSalary}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SalaryEstimator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}