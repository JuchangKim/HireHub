{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B4NKRUPT\\\\Desktop\\\\Studies\\\\sdp\\\\HireHub\\\\HireHub\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create AuthProvider component\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if a token is present in local storage\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n// Custom hook to use auth context\n_s(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/B4NKRUPT/Desktop/Studies/sdp/HireHub/HireHub/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create AuthContext\nconst AuthContext = createContext();\n\n// Create AuthProvider component\nexport function AuthProvider({ children }) {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        // Check if a token is present in local storage\n        const token = localStorage.getItem('token');\n        if (token) {\n            setIsAuthenticated(true);\n        } else {\n            setIsAuthenticated(false);\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\n// Custom hook to use auth context\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACPD,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,MAAM;MACHA,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,eAAe;MAAEC;IAAmB,CAAE;IAAAH,QAAA,EAChEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;;AAEA;AAAAX,EAAA,CApBgBF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAqB5B,OAAO,SAASe,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAOtB,UAAU,CAACK,WAAW,CAAC;AAClC;AAACiB,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}