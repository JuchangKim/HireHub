{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\comp602\\\\HireHub\\\\client\\\\src\\\\pages\\\\IndustryNewsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IndustryNewsPage() {\n  _s();\n  const [newsArticles, setNewsArticles] = useState([]); // Store the list of news articles\n  const navigate = useNavigate(); // Use the navigate hook for navigation\n\n  // Fetch the list of news articles when the component mounts\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/news');\n        setNewsArticles(response.data);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      }\n    };\n    fetchNews();\n  }, []);\n\n  // Handle clicking on an article by navigating to its detail page\n  const handleArticleClick = article => {\n    navigate(`/industry-news/${article.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: newsArticles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => handleArticleClick(article),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: article.image,\n            alt: article.title,\n            className: \"card-img-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: article.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: article.datePosted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, article.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(IndustryNewsPage, \"S7hR+BTmbKv0U2GN8uCfmc635Ps=\", false, function () {\n  return [useNavigate];\n});\n_c = IndustryNewsPage;\nexport default IndustryNewsPage;\nvar _c;\n$RefreshReg$(_c, \"IndustryNewsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","IndustryNewsPage","_s","newsArticles","setNewsArticles","navigate","fetchNews","response","get","data","error","console","handleArticleClick","article","id","className","children","map","onClick","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","summary","datePosted","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/comp602/HireHub/client/src/pages/IndustryNewsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction IndustryNewsPage() {\r\n    const [newsArticles, setNewsArticles] = useState([]); // Store the list of news articles\r\n    const navigate = useNavigate(); // Use the navigate hook for navigation\r\n\r\n    // Fetch the list of news articles when the component mounts\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/news');\r\n                setNewsArticles(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching news:', error);\r\n            }\r\n        };\r\n        fetchNews();\r\n    }, []);\r\n\r\n    // Handle clicking on an article by navigating to its detail page\r\n    const handleArticleClick = (article) => {\r\n        navigate(`/industry-news/${article.id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                {newsArticles.map((article) => (\r\n                    <div className=\"col-md-4 mb-4\" key={article.id}>\r\n                        <div className=\"card\" onClick={() => handleArticleClick(article)}>\r\n                            <img src={article.image} alt={article.title} className=\"card-img-top\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{article.title}</h5>\r\n                                <p className=\"card-text\">{article.summary}</p>\r\n                                <p className=\"text-muted\">{article.datePosted}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndustryNewsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}